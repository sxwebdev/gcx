version: 1
out_dir: "dist"

# Hooks executed before build
before:
  hooks:
    - go mod tidy
    - go generate ./...

# Hooks executed after build
after:
  hooks:
    - echo "Build completed!"
    - ./scripts/notify-telegram.sh "New build ready!"

# Build configuration
builds:
  - main: ./cmd/myapp
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - "-X main.version={{.Version}}"
      - "-X main.commit={{.Commit}}"
    env:
      - CGO_ENABLED=0

# Archive configuration
archives:
  - formats: ["tar.gz"]
    name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

# Artifact publishing configuration
blobs:
  - provider: s3
    bucket: "my-releases"
    directory: "{{.ProjectID}}/{{.Version}}"
    region: "us-east-1"
    endpoint: "https://s3.amazonaws.com"

  - provider: ssh
    server: "storage.example.com"
    user: "deployer"
    key_path: "~/.ssh/deploy_key"
    directory: "/var/www/releases/{{.ProjectID}}/{{.Version}}"

# Deploy configuration
deploys:
  - name: "production"
    provider: "ssh"
    server: "prod.example.com"
    user: "deployer"
    key_path: "~/.ssh/deploy_key"
    commands:
      - systemctl stop myapp
      - cp /var/www/releases/myapp/latest/myapp /usr/local/bin/
      - chmod +x /usr/local/bin/myapp
      - systemctl start myapp
      - systemctl status myapp
    # Alert configuration for production
    alerts:
      urls:
        # Main Telegram channel for the team
        - "telegram://chatID:token@telegram?channels=myapp-alerts"
        # Backup Slack channel
        - "slack://token/general"
        # Discord notifications for monitoring
        - "discord://123456789012345678/abcdefghijklmnopqrstuvwxyz1234567890"
        # Microsoft Teams channel
        - "teams://group1/tenant2/webhook3"

  - name: "staging"
    provider: "ssh"
    server: "staging.example.com"
    user: "deployer"
    key_path: "~/.ssh/deploy_key"
    commands:
      - docker-compose -f /opt/myapp/docker-compose.yml down
      - cp /var/www/releases/myapp/latest/myapp /opt/myapp/
      - docker-compose -f /opt/myapp/docker-compose.yml up -d
      - docker-compose -f /opt/myapp/docker-compose.yml ps
    # Alert configuration for staging
    alerts:
      urls:
        # Telegram channel for test environment
        - "telegram://123456789:token@telegram?channels=myapp-staging"
        # Webhook for external monitoring system integration
        - "generic://monitoring.example.com/webhook?token=your-token-here"
